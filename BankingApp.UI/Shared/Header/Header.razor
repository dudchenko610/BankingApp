<nav class="navbar navbar-expand navbar-dark bg-dark">
    <label class="navbar-brand" href="/">BankingApp</label>

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExample02" aria-controls="navbarsExample02" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse">
        <ul class="navbar-nav mr-auto">

            @if (_authenticationService.TokensView is not null)
            {
                <li class="nav-item  @GetActive("", NavLinkMatch.All)">
                    <a class="nav-link @_navLinksDisabledClass" href="#" @onclick="() => { _navigationWrapper.NavigateTo(Routes.MainPage); }" @onclick:preventDefault>MainPage</a>
                </li>

                <li class="nav-item  @GetActive("history", NavLinkMatch.All)">
                    <a class="nav-link @_navLinksDisabledClass" href="#" @onclick='() => { _navigationWrapper.NavigateTo(Routes.HistoryPage + "/1"); }' @onclick:preventDefault>History</a>
                </li>

                @if (_authenticationService.IsAdmin)
                {
                    <li class="nav-item  @GetActive("users", NavLinkMatch.All)">
                        <a class="nav-link @_navLinksDisabledClass" href="#" @onclick='async () => { _navigationWrapper.NavigateTo(Routes.UsersPage + "/1");  }' @onclick:preventDefault>Users</a>
                    </li>
                }

                <li class="nav-item  @GetActive("logout", NavLinkMatch.All)">
                    <a class="nav-link @_navLinksDisabledClass" href="#" @onclick="async () => { await _authenticationService.LogoutAsync(); }" @onclick:preventDefault>Logout</a>
                </li>
            }
            else
            {
                <li class="nav-item  @GetActive("signIn", NavLinkMatch.All)">
                    <a class="nav-link @_navLinksDisabledClass" href="#" @onclick="() => { _navigationWrapper.NavigateTo(Routes.SignInPage); }" @onclick:preventDefault>SignIn</a>
                </li>

                <li class="nav-item  @GetActive("signUp", NavLinkMatch.All)">
                    <a class="nav-link @_navLinksDisabledClass" href="#" @onclick="() => { _navigationWrapper.NavigateTo(Routes.SignUpPage); }" @onclick:preventDefault>SignUp</a>
                </li>
            }
        </ul>
    </div>
</nav>